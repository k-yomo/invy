package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"

	cerrors "github.com/cockroachdb/errors"
	"github.com/k-yomo/invy/invy_api/ent/pushnotificationtoken"
	"github.com/k-yomo/invy/invy_api/graph/gqlmodel"
	"github.com/k-yomo/invy/invy_api/internal/auth"
)

// RegisterPushNotificationToken is the resolver for the registerPushNotificationToken field.
func (r *mutationResolver) RegisterPushNotificationToken(ctx context.Context, input *gqlmodel.RegisterPushNotificationTokenInput) (*gqlmodel.RegisterPushNotificationTokenPayload, error) {
	authUserID := auth.GetCurrentUserID(ctx)
	pushNotificationTokenID, err := r.DB.PushNotificationToken.Create().
		SetUserID(authUserID).
		SetDeviceID(input.DeviceID).
		SetFcmToken(input.FcmToken).
		OnConflictColumns(pushnotificationtoken.FieldDeviceID).
		UpdateNewValues().
		ID(ctx)
	if err != nil {
		return nil, cerrors.Wrap(err, "create push notification token")
	}
	return &gqlmodel.RegisterPushNotificationTokenPayload{RegisteredPushNotificationTokenID: pushNotificationTokenID}, nil
}
