package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/k-yomo/invy/invy_api/ent/userlocation"
	"github.com/k-yomo/invy/invy_api/graph/gqlmodel"
	"github.com/k-yomo/invy/invy_api/internal/auth"
	"github.com/k-yomo/invy/pkg/pgutil"
)

// UpdateLocation is the resolver for the updateLocation field.
func (r *mutationResolver) UpdateLocation(ctx context.Context, latitude float64, longitude float64) (*gqlmodel.UpdateLocationPayload, error) {
	authUserID := auth.GetCurrentUserID(ctx)

	updatedID, err := r.DB.UserLocation.Create().
		SetUserID(authUserID).
		SetCoordinate(pgutil.NewGeoPoint(latitude, longitude)).
		OnConflictColumns(userlocation.FieldUserID).
		UpdateNewValues().
		ID(ctx)
	if err != nil {
		return nil, err
	}
	return &gqlmodel.UpdateLocationPayload{UpdatedUserLocationID: updatedID}, nil
}
