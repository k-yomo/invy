name: Shing API Workflow
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/invy_api.yml"
      - "invy_api/**"
      - "pkg/**"

env:
  GO111MODULE: "on"
  TZ: "Asia/Tokyo"

jobs:
  ci:
    name: CI
    environment:
      name: invy-api-prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go

      - name: Cache modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download

      #      - name: Lint
      #        uses: golangci/golangci-lint-action@v3.1.0
      #        with:
      #          version: v1.33
      #
      - name: Test
        run: go test ./... -v -race -coverprofile=coverage.out

#      - name: Setup Cloud SDK
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          version: '348.0.0'
#          service_account_key: ${{ secrets.PROD_GCP_CI_USER_KEY_BASE64 }}

#      - name: Push Docker Image to Prod GCR
#        if: github.ref == 'refs/heads/main'
#        run: |
#          gcloud --quiet auth configure-docker asia-northeast1-docker.pkg.dev
#          docker build -t invy-api -f invy_api.Dockerfile .
#          docker tag invy-api asia-northeast1-docker.pkg.dev/${{ secrets.PROD_GCP_PROJECT }}/shing/invy-api:latest
#          docker push asia-northeast1-docker.pkg.dev/${{ secrets.PROD_GCP_PROJECT }}/shing/invy-api
#        env:
#          DOCKER_BUILDKIT: 1
#
#      - name: Deploy
#        if: github.ref == 'refs/heads/main'
#        run: |
#          gcloud run deploy invy-api-prod --image=asia-northeast1-docker.pkg.dev/${{ secrets.PROD_GCP_PROJECT }}/shing/invy-api:latest --project=${{ secrets.PROD_GCP_PROJECT }} --region=asia-northeast1 --platform=managed
