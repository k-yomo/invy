extend type Mutation {
    signUp(input: SignUpInput!): SignUpPayload!
    signOut: SignOutPayload! @authRequired
    deleteAccount: DeleteAccountPayload! @authRequired

    createUser(input: CreateUserInput!): CreateUserPayload! @authRequired
    switchUser(userId: UUID!): SwitchUserPayload! @authRequired
}


input SignUpInput {
    email: String @constraint(format: EMAIL)
    nickname: String @constraint(min: 3)
    avatarUrl: String @constraint(format: URL) @deprecated(reason: "Use avatar instead")
    avatar: Upload
}
type SignUpPayload {
    viewer: Viewer!
}

type SignOutPayload {
    signedOutUserId: UUID!
}

input CreateUserInput {
    nickname: String! @constraint(min: 3)
    avatarUrl: String @constraint(format: URL)
}
type CreateUserPayload {
    viewer: Viewer!
}

type SwitchUserPayload {
    viewer: Viewer!
}

type DeleteAccountPayload {
    deletedAccountId: UUID!
}
