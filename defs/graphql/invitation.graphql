extend type Mutation {
    sendInvitation(input: SendInvitationInput): SendInvitationPayload! @authRequired
    acceptInvitation(invitationId: UUID!): AcceptInvitationPayload! @authRequired
    denyInvitation(invitationId: UUID!): DenyInvitationPayload! @authRequired
}

type Coordinate {
    latitude: Float!
    longitude: Float!
}

type Invitation implements Node {
    id: UUID!
    userId: UUID!
    user: User! @goField(forceResolver: true)
    location: String!
    coordinate: Coordinate
    comment: String!
    startsAt: Time!
    expiresAt: Time!

    acceptedUsers: [User!]! @goField(forceResolver: true)
}

input SendInvitationInput {
    targetFriendGroupIds: [UUID!]!
    targetFriendUserIds: [UUID!]!
    expiresAt: Time!
    startsAt: Time!
    location: String!
    latitude: Float
    longitude: Float
    comment: String!
}
type SendInvitationPayload {
    invitation: Invitation!
}

type AcceptInvitationPayload {
    invitation: Invitation!
}

type DenyInvitationPayload {
    invitation: Invitation!
}
